# -*- coding: utf-8 -*-
"""Text2Speech.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mr6CohagF-oRnEpW1j230Ot6X91E_P4e
"""

import streamlit as st
import openai
from gtts import gTTS
import os

# âœ… Initialize OpenAI client with Streamlit secret
openai.api_key = st.secrets["OPENAI_API_KEY"]

# âœ… Streamlit App Title
st.title("Your ChatBot Name ðŸ¤– with Text-to-Speech")

# âœ… Maintain chat history in session state
if "messages" not in st.session_state:
    st.session_state["messages"] = []

# Function to get response from OpenAI
def get_response(user_input):
    messages = [{"role": "system", "content": "You are a helpful assistant."}]
    messages += st.session_state["messages"]
    messages.append({"role": "user", "content": user_input})

    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=messages
    )
    reply = response.choices[0].message["content"]
    return reply

# Display existing chat history
for msg in st.session_state["messages"]:
    with st.chat_message(msg["role"]):
        st.markdown(msg["content"])

# User input
if user_input := st.chat_input("Type your message..."):
    # Append user message
    st.session_state["messages"].append({"role": "user", "content": user_input})
    with st.chat_message("user"):
        st.markdown(user_input)

    # Get AI response
    reply = get_response(user_input)
    st.session_state["messages"].append({"role": "assistant", "content": reply})

    with st.chat_message("assistant"):
        st.markdown(reply)

        # âœ… Generate speech from reply using gTTS
        tts = gTTS(reply, lang="en")
        audio_path = "reply.mp3"
        tts.save(audio_path)

        # âœ… Play audio in Streamlit
        st.audio(audio_path, format="audio/mp3")
